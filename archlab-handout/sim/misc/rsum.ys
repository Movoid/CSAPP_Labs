# Y86-64 ASM
# %rax, %rcx, %rdx, %rsi, %rdi Caller-Saved
# %rbx, %rbp, %rsp             Callee-Saved

.pos 0
start_main:
  # prologue
  irmovq stack, %rsp
  call main
  halt
  # end

.align 8
ele1:
  .quad 0x00a
  .quad ele2
ele2:
  .quad 0x0b0
  .quad ele3
ele3:
  .quad 0xc00
  .quad 0

.pos 0x400

main:
  irmovq ele1, %rdi
  call rsum_list
  ret

rsum_list:
  pushq %rbx
  pushq %rbp
  xorq %rbp, %rbp
cond:
  andq %rdi, %rdi
  # if is zero then end
  je end_ret

rec:
  mrmovq (%rdi), %rbx # %rdi -> &beg_node
  addq %rbx, %rbp
  mrmovq 8(%rdi), %rdi
  call rsum_list
  addq %rax, %rbp

end_ret:
  rrmovq %rbp, %rax
  popq %rbp
  popq %rbx
  ret

# WARNING! ALLOC ENOUGH SPACE FOR STACK,
# PREVERNTING FROM COVERING CODE SEGMENT.
.pos 0x800
stack:
