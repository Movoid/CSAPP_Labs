                            | # Y86-64 ASM
                            | # %rax, %rcx, %rdx, %rsi, %rdi Caller-Saved
                            | # %rbx, %rbp, %rsp             Callee-Saved
                            | 
0x000:                      | .pos 0
0x000:                      | start_main:
                            |   # prologue
0x000: 30f40008000000000000 |   irmovq stack, %rsp
0x00a: 800004000000000000   |   call main
0x013: 00                   |   halt
                            |   # end
                            | 
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |   .quad 0x00a
0x020: 2800000000000000     |   .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |   .quad 0x0b0
0x030: 3800000000000000     |   .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |   .quad 0xc00
0x040: 0000000000000000     |   .quad 0
                            | 
0x400:                      | .pos 0x400
                            | 
0x400:                      | main:
0x400: 30f71800000000000000 |   irmovq ele1, %rdi
0x40a: 801404000000000000   |   call rsum_list
0x413: 90                   |   ret
                            | 
0x414:                      | rsum_list:
0x414: a03f                 |   pushq %rbx
0x416: a05f                 |   pushq %rbp
0x418: 6355                 |   xorq %rbp, %rbp
0x41a:                      | cond:
0x41a: 6277                 |   andq %rdi, %rdi
                            |   # if is zero then end
0x41c: 734604000000000000   |   je end_ret
                            | 
0x425:                      | rec:
0x425: 50370000000000000000 |   mrmovq (%rdi), %rbx # %rdi -> &beg_node
0x42f: 6035                 |   addq %rbx, %rbp
0x431: 50770800000000000000 |   mrmovq 8(%rdi), %rdi
0x43b: 801404000000000000   |   call rsum_list
0x444: 6005                 |   addq %rax, %rbp
                            | 
0x446:                      | end_ret:
0x446: 2050                 |   rrmovq %rbp, %rax
0x448: b05f                 |   popq %rbp
0x44a: b03f                 |   popq %rbx
0x44c: 90                   |   ret
                            | 
                            | # WARNING! ALLOC ENOUGH SPACE FOR STACK,
                            | # PREVERNTING FROM COVERING CODE SEGMENT.
0x800:                      | .pos 0x800
0x800:                      | stack:
